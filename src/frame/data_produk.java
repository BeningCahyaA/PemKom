/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frame;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import casier.connection;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author MyLaptop
 */
public class data_produk extends javax.swing.JFrame {

    /**
     * Creates new form data_produk
     */
    static DefaultTableModel prd;

    public data_produk() {
        initComponents();
        settingTableProduk();
        viewdataProduk("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        bt_tambah = new javax.swing.JButton();
        bt_hapus = new javax.swing.JButton();
        bt_edit = new javax.swing.JButton();
        bt_kembali = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_produk = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DATA PRODUK");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        bt_tambah.setText("Tambah");
        bt_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_tambahActionPerformed(evt);
            }
        });

        bt_hapus.setText("Hapus");
        bt_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_hapusActionPerformed(evt);
            }
        });

        bt_edit.setText("Edit");
        bt_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editActionPerformed(evt);
            }
        });

        bt_kembali.setText("Kembali");
        bt_kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_kembaliActionPerformed(evt);
            }
        });

        tbl_produk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "no", "id_produk", "id_kategori", "Nama", "Description", "Harga", "Stok"
            }
        ));
        jScrollPane1.setViewportView(tbl_produk);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(bt_tambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_hapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_edit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_kembali)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_tambah)
                    .addComponent(bt_hapus)
                    .addComponent(bt_edit)
                    .addComponent(bt_kembali))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(215, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editActionPerformed
          int selectedRow = tbl_produk.getSelectedRow(); // Ambil baris yang dipilih
    if (selectedRow != -1) {
        int produk_id = (int) tbl_produk.getValueAt(selectedRow, 1); // Ambil produk_id dari kolom yang sesuai
        String name = (String) tbl_produk.getValueAt(selectedRow, 3); // Ambil nama produk
        String description = (String) tbl_produk.getValueAt(selectedRow, 4); // Ambil deskripsi produk
        String harga = (String) tbl_produk.getValueAt(selectedRow, 5); // Ambil harga produk
        String stock = (String) tbl_produk.getValueAt(selectedRow, 6); // Ambil stock produk
        
        // Buka form editor untuk mengedit produk
        frame.edit_produk editProdukFrame = new frame.edit_produk(this, true);
        
        // Set data produk ke form editor
        editProdukFrame.setProdukId(produk_id);
        editProdukFrame.setName(name);
        editProdukFrame.setDescription(description);
        editProdukFrame.setHarga(harga);
        editProdukFrame.setStock(stock);
        
        // Tampilkan editor
        editProdukFrame.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Pilih produk yang akan diedit.");
    }
    }//GEN-LAST:event_bt_editActionPerformed

    private void bt_kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_kembaliActionPerformed
        dashboard menu = new dashboard();
        menu.setVisible(true);
        menu.revalidate();

        dispose();
    }//GEN-LAST:event_bt_kembaliActionPerformed

    private void bt_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_tambahActionPerformed
        tambah_produk menu = new tambah_produk();
        menu.setVisible(true);
        menu.revalidate();

        dispose();
    }//GEN-LAST:event_bt_tambahActionPerformed

    private void bt_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_hapusActionPerformed
        int n = tbl_produk.getSelectedRow();  // Ambil baris yang dipilih di tabel produk
        if (n != -1) {  // Cek jika ada baris yang dipilih
            // Ambil produk_id dari kolom pertama
            int produk_id = Integer.parseInt(tbl_produk.getValueAt(n, 1).toString());
            System.out.println("Produk ID yang dipilih: " + produk_id);

            // Tampilkan konfirmasi penghapusan
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Apakah Anda yakin ingin menghapus produk ini?",
                    "Konfirmasi Hapus",
                    JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    // Query untuk menghapus produk berdasarkan produk_id
                    String query = "DELETE FROM produk WHERE produk_id = ?";

                    // Persiapkan koneksi dan statement
                    Connection conn = (Connection) casier.connection.konek();  // Sesuaikan koneksi dengan objek Anda
                    PreparedStatement stmt = conn.prepareStatement(query);

                    // Set nilai produk_id pada statement
                    stmt.setInt(1, produk_id);

                    // Eksekusi query
                    int rowsAffected = stmt.executeUpdate();
                    System.out.println("Jumlah baris yang terpengaruh: " + rowsAffected);

                    // Cek apakah penghapusan berhasil
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(this, "Produk berhasil dihapus");
                        // Update tabel setelah penghapusan
                        viewdataProduk("");  // Memanggil fungsi untuk menampilkan data produk terbaru
                    } else {
                        JOptionPane.showMessageDialog(this, "Produk tidak ditemukan atau gagal dihapus");
                    }

                    // Tutup statement dan koneksi
                    stmt.close();
                    conn.close();
                } catch (SQLException e) {
                    // Menampilkan error jika terjadi masalah pada query atau koneksi
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus produk: " + e.getMessage());
                }
            }
        } else {
            // Jika tidak ada baris yang dipilih
            JOptionPane.showMessageDialog(this, "Anda belum memilih produk untuk dihapus");
        }
    }//GEN-LAST:event_bt_hapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(data_produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(data_produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(data_produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(data_produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new data_produk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_edit;
    private javax.swing.JButton bt_hapus;
    private javax.swing.JButton bt_kembali;
    private javax.swing.JButton bt_tambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_produk;
    // End of variables declaration//GEN-END:variables

    public static void viewdataProduk(String where) {
        // Menghapus semua baris dari tabel sebelum memasukkan data yang baru
        try {
            for (int i = prd.getRowCount() - 1; i >= 0; i--) {
                prd.removeRow(i);
            }

            // Membuka koneksi ke database
            try (Connection K = casier.connection.konek(); Statement S = K.createStatement()) {

                // Membuat query SQL untuk mengambil data produk berdasarkan kondisi where
                String Q = "SELECT * FROM produk " + where;
                // System.out.println(Q); // Uncomment untuk melihat query yang digunakan

                // Menjalankan query
                try (ResultSet R = S.executeQuery(Q)) {
                    int no = 1;
                    while (R.next()) {
                        int produk_id = R.getInt("produk_id");
                        int kategori_id = R.getInt("kategori_id");
                        String name = R.getString("name");
                        String description = R.getString("description");
                        String harga = R.getString("harga");
                        String stock = R.getString("stock");

                        // Menambahkan data produk ke dalam tabel
                        Object[] P = {no, produk_id, kategori_id, name, description, harga, stock};
                        prd.addRow(P);

                        no++;
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error fetching data: " + e.getMessage());
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Database connection error: " + e.getMessage());
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "An error occurred while processing data: " + e.getMessage());
        }
    }

    private void settingTableProduk() {
        prd = (DefaultTableModel) tbl_produk.getModel();
        tbl_produk.getColumnModel().getColumn(0).setMinWidth(50);
        tbl_produk.getColumnModel().getColumn(0).setMaxWidth(70);

        tbl_produk.getColumnModel().getColumn(1).setMinWidth(0);
        tbl_produk.getColumnModel().getColumn(1).setMaxWidth(0);

        tbl_produk.getColumnModel().getColumn(2).setMinWidth(350);
        tbl_produk.getColumnModel().getColumn(2).setMaxWidth(500);

        tbl_produk.getColumnModel().getColumn(3).setMinWidth(350);
        tbl_produk.getColumnModel().getColumn(3).setMaxWidth(500);

        tbl_produk.getColumnModel().getColumn(4).setMinWidth(350);
        tbl_produk.getColumnModel().getColumn(4).setMaxWidth(500);

        tbl_produk.getColumnModel().getColumn(5).setMinWidth(350);
        tbl_produk.getColumnModel().getColumn(5).setMaxWidth(500);
    }

}
